
class GiniCalc:
    # pk is the proportion of same class inputs present in a particular group
    # another definition is pk is the ratio between the number in listOfNums and total num of observations

    # this class contains 2 different methods in calculating the gini score/ index. They result in very similar values
    def __init__(self, listOfNums):
        self.listOfNums = listOfNums
        self.denom = sum(self.listOfNums)

    # gini index = 1 - sum(pk^2)
    def getGiniIndex(self):
        num = 1
        for i in self.listOfNums:
            pk = i / self.denom
            num -= (pk) ** 2
        return num

    # gini score = sum(pk * (1 - pk))
    def getGiniScore(self):
        num = 0
        for i in self.listOfNums:
            pk = i / self.denom
            num += pk * (1 - pk)
        return num

factor_a_values = [6, 3]
factor_b_values = [5, 1]

factor_a = GiniCalc(factor_a_values)
print("factor a gini score ===================")
print(factor_a.getGiniIndex())
print(factor_a.getGiniScore())

factor_b = GiniCalc(factor_b_values)
print("factor b gini score ===================")
print(factor_b.getGiniIndex())
print(factor_b.getGiniScore())

print("entrophy for factors ===================")
total_denom = sum(factor_a_values) + sum(factor_b_values)
gini_factors = (factor_a.getGiniIndex() * sum(factor_a_values) / total_denom) + (factor_b.getGiniIndex() * sum(factor_b_values) / total_denom)
print(gini_factors)